package org.campagnelab.metar.scnorm.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.impl.query.QueryProviderBase;
import jetbrains.mps.generator.template.PropertyMacroContext;
import org.campagnelab.metar.tables.behavior.ISaveRVariableInSession__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import org.campagnelab.metar.tables.behavior.Table__BehaviorDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import java.util.Objects;
import jetbrains.mps.internal.collections.runtime.IterableUtils;
import jetbrains.mps.internal.collections.runtime.ISelector;
import org.campagnelab.metar.tables.behavior.ColumnGroup__BehaviorDescriptor;
import org.campagnelab.metar.code.generator.helpers.RPath;
import org.campagnelab.metar.scnorm.behavior.CheckCountDepth__BehaviorDescriptor;
import org.campagnelab.metar.scnorm.behavior.ScanKOption__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.campagnelab.instantrefresh.behavior.IAtomic__BehaviorDescriptor;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.Map;
import jetbrains.mps.generator.impl.query.SourceNodesQuery;
import java.util.HashMap;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.impl.query.QueryKey;
import jetbrains.mps.generator.impl.query.QueryKeyImpl;
import java.util.Collection;
import jetbrains.mps.generator.impl.GenerationFailureException;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.generator.impl.query.PropertyValueQuery;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.generator.impl.query.IfMacroCondition;

@Generated
public class QueriesGenerated extends QueryProviderBase {
  public QueriesGenerated() {
    super(1);
  }
  public static Object propertyMacro_GetPropertyValue_480556465136580368(final PropertyMacroContext _context) {
    return (String) ISaveRVariableInSession__BehaviorDescriptor.getVariableName_id52J4nYvd$7N.invoke(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae15e5b77L, 0x5f510ae1257b01L, "countsTable")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd5e5fb7L, 0x2f3745fadd5e82e5L, "table")));
  }
  public static Object propertyMacro_GetPropertyValue_480556465136580384(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  public static Object propertyMacro_GetPropertyValue_480556465136580422(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(Sequence.fromIterable(Table__BehaviorDescriptor.findColumnsWithGroup_id5hNeoNXWkF.invoke(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae15e5b77L, 0x5f510ae1257b01L, "countsTable")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd5e5fb7L, 0x2f3745fadd5e82e5L, "table")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd605ac5L, 0x2f3745fadd605affL, "table")), "ID")).first(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  public static Object propertyMacro_GetPropertyValue_8544263073411224539(final PropertyMacroContext _context) {
    Iterable<SNode> columns = ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae15e5b77L, 0x5f510ae1257b01L, "countsTable")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd5e5fb7L, 0x2f3745fadd5e82e5L, "table")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd605ac5L, 0x2f3745fadd605affL, "table")), MetaAdapterFactory.getContainmentLink(0x5ec1cd3d0a504049L, 0xa8faae768d7baa25L, 0x1e924e67df2c8b97L, 0x1e924e67df2c9a74L, "columns"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return ListSequence.fromList(SLinkOperations.getChildren(AttributeOperations.getAttribute(it, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745faddba8bacL, "org.campagnelab.metar.tables.structure.ColumnAnnotation"))), MetaAdapterFactory.getContainmentLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745faddba8bacL, 0x2f3745faddba9108L, "groups"))).any(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return Objects.equals(SPropertyOperations.getString(SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745faddba8c07L, 0x2f3745faddba8c08L, "columnGroup")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")), "counts");
          }
        });
      }
    });
    return "\"" + IterableUtils.join(Sequence.fromIterable(columns).select(new ISelector<SNode, String>() {
      public String select(SNode column) {
        SNode cGroup = Sequence.fromIterable(SLinkOperations.collect(SLinkOperations.getChildren(AttributeOperations.getAttribute(column, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745faddba8bacL, "org.campagnelab.metar.tables.structure.ColumnAnnotation"))), MetaAdapterFactory.getContainmentLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745faddba8bacL, 0x2f3745faddba9108L, "groups")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745faddba8c07L, 0x2f3745faddba8c08L, "columnGroup"))).findFirst(new IWhereFilter<SNode>() {
          public boolean accept(SNode cGroup) {
            return Sequence.fromIterable(ColumnGroup__BehaviorDescriptor.uses_id6XP3gVdXeLZ.invoke(cGroup)).contains(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae1257b00L, 0x4778ac6ee8f93e27L, "condition")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x6f750d0ecde3e9dfL, 0x6f750d0ecde3e9e0L, "usage")));
          }
        });
        return SPropertyOperations.getString(cGroup, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
      }
    }), "\",\"") + "\"";
  }
  public static Object propertyMacro_GetPropertyValue_480556465136588096(final PropertyMacroContext _context) {
    return new RPath(CheckCountDepth__BehaviorDescriptor.getOutputPath_idqFhSWmYbmX.invoke(_context.getNode()) + ScanKOption__BehaviorDescriptor.kPrefix_id5X5p3g3lvmI.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae1257b00L, 0x5f4564340350eaa6L, "scanK"))) + "_").toString();
  }
  public static Object propertyMacro_GetPropertyValue_480556465136821726(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae15e5b77L, 0x5f510ae15ebb66L, "filterCellProportion"));
  }
  public static Object propertyMacro_GetPropertyValue_6865003381553004105(final PropertyMacroContext _context) {
    {
      final SNode fixed = SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae1257b00L, 0x5f4564340350eaa6L, "scanK"));
      if (SNodeOperations.isInstanceOf(fixed, MetaAdapterFactory.getConcept(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f4564340350eaadL, "org.campagnelab.metar.scnorm.structure.FixedK"))) {
        return Integer.toString(SPropertyOperations.getInteger(fixed, MetaAdapterFactory.getProperty(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f4564340350eaadL, 0x5f4564340350eaaeL, "K")));
      }
    }
    return "-1";
  }
  public static Object propertyMacro_GetPropertyValue_480556465136761024(final PropertyMacroContext _context) {
    return (String) ISaveRVariableInSession__BehaviorDescriptor.getVariableName_id52J4nYvd$7N.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae1257b00L, 0x5f510ae1257b13L, "normalizedTable")));
  }
  public static Object propertyMacro_GetPropertyValue_49418204378381487(final PropertyMacroContext _context) {
    return (String) ISaveRVariableInSession__BehaviorDescriptor.getVariableName_id52J4nYvd$7N.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae1257b00L, 0x5f510ae1257b13L, "normalizedTable")));
  }
  public static Object propertyMacro_GetPropertyValue_49418204378384448(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(Sequence.fromIterable(Table__BehaviorDescriptor.findColumnsWithGroup_id5hNeoNXWkF.invoke(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae15e5b77L, 0x5f510ae1257b01L, "countsTable")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd5e5fb7L, 0x2f3745fadd5e82e5L, "table")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd605ac5L, 0x2f3745fadd605affL, "table")), "ID")).first(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  public static Object propertyMacro_GetPropertyValue_49418204378647515(final PropertyMacroContext _context) {
    return (String) ISaveRVariableInSession__BehaviorDescriptor.getVariableName_id52J4nYvd$7N.invoke(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae15e5b77L, 0x5f510ae1257b01L, "countsTable")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd5e5fb7L, 0x2f3745fadd5e82e5L, "table")));
  }
  public static Object propertyMacro_GetPropertyValue_49418204378641616(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(Sequence.fromIterable(Table__BehaviorDescriptor.findColumnsWithGroup_id5hNeoNXWkF.invoke(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae15e5b77L, 0x5f510ae1257b01L, "countsTable")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd5e5fb7L, 0x2f3745fadd5e82e5L, "table")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd605ac5L, 0x2f3745fadd605affL, "table")), "ID")).first(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  public static Object propertyMacro_GetPropertyValue_480556465136580475(final PropertyMacroContext _context) {
    return (String) IAtomic__BehaviorDescriptor.id_idhlbLQwkRFj.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_480556465136580482(final PropertyMacroContext _context) {
    return (String) IAtomic__BehaviorDescriptor.id_idhlbLQwkRFj.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_480556465135944284(final PropertyMacroContext _context) {
    return (String) ISaveRVariableInSession__BehaviorDescriptor.getVariableName_id52J4nYvd$7N.invoke(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae15e5b77L, 0x5f510ae1257b01L, "countsTable")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd5e5fb7L, 0x2f3745fadd5e82e5L, "table")));
  }
  public static Object propertyMacro_GetPropertyValue_8544263073412629227(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  public static Object propertyMacro_GetPropertyValue_480556465135997729(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(Sequence.fromIterable(Table__BehaviorDescriptor.findColumnsWithGroup_id5hNeoNXWkF.invoke(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae15e5b77L, 0x5f510ae1257b01L, "countsTable")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd5e5fb7L, 0x2f3745fadd5e82e5L, "table")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd605ac5L, 0x2f3745fadd605affL, "table")), "ID")).first(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  public static Object propertyMacro_GetPropertyValue_26829229960117245(final PropertyMacroContext _context) {
    return new RPath(CheckCountDepth__BehaviorDescriptor.getOutputPath_idqFhSWmYbmX.invoke(_context.getNode())).toString();
  }
  public static Object propertyMacro_GetPropertyValue_480556465136151482(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae15e5b77L, 0x5f510ae15ebb66L, "filterCellProportion"));
  }
  public static Object propertyMacro_GetPropertyValue_1369498147940466311(final PropertyMacroContext _context) {
    return (String) IAtomic__BehaviorDescriptor.id_idhlbLQwkRFj.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_480556465136101175(final PropertyMacroContext _context) {
    return (String) IAtomic__BehaviorDescriptor.id_idhlbLQwkRFj.invoke(_context.getNode());
  }
  public static boolean ifMacro_Condition_6865003381553089603(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae1257b00L, 0x5f4564340350eaa6L, "scanK")), MetaAdapterFactory.getConcept(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f4564340350eaadL, "org.campagnelab.metar.scnorm.structure.FixedK"));
  }
  public static Iterable<SNode> sourceNodesQuery_8544263073411795770(final SourceSubstituteMacroNodesContext _context) {
    //  remove columns that do not contain counts: 
    return ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae15e5b77L, 0x5f510ae1257b01L, "countsTable")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd5e5fb7L, 0x2f3745fadd5e82e5L, "table")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd605ac5L, 0x2f3745fadd605affL, "table")), MetaAdapterFactory.getContainmentLink(0x5ec1cd3d0a504049L, 0xa8faae768d7baa25L, 0x1e924e67df2c8b97L, 0x1e924e67df2c9a74L, "columns"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return Sequence.fromIterable(SLinkOperations.collect(SLinkOperations.getChildren(AttributeOperations.getAttribute(it, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745faddba8bacL, "org.campagnelab.metar.tables.structure.ColumnAnnotation"))), MetaAdapterFactory.getContainmentLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745faddba8bacL, 0x2f3745faddba9108L, "groups")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745faddba8c07L, 0x2f3745faddba8c08L, "columnGroup"))).all(new IWhereFilter<SNode>() {
          public boolean accept(SNode cGroup) {
            return !(Objects.equals(SPropertyOperations.getString(cGroup, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")), "counts"));
          }
        });
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_8544263073412629253(final SourceSubstituteMacroNodesContext _context) {
    //  remove columns that do not contain counts: 
    return ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xac875888d38140acL, 0x8fad78c941372a9eL, 0x5f510ae15e5b77L, 0x5f510ae1257b01L, "countsTable")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd5e5fb7L, 0x2f3745fadd5e82e5L, "table")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745fadd605ac5L, 0x2f3745fadd605affL, "table")), MetaAdapterFactory.getContainmentLink(0x5ec1cd3d0a504049L, 0xa8faae768d7baa25L, 0x1e924e67df2c8b97L, 0x1e924e67df2c9a74L, "columns"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return Sequence.fromIterable(SLinkOperations.collect(SLinkOperations.getChildren(AttributeOperations.getAttribute(it, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745faddba8bacL, "org.campagnelab.metar.tables.structure.ColumnAnnotation"))), MetaAdapterFactory.getContainmentLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745faddba8bacL, 0x2f3745faddba9108L, "groups")), MetaAdapterFactory.getReferenceLink(0x5d6bde844ce44eb5L, 0xa37e25a5edd55129L, 0x2f3745faddba8c07L, 0x2f3745faddba8c08L, "columnGroup"))).all(new IWhereFilter<SNode>() {
          public boolean accept(SNode cGroup) {
            return !(Objects.equals(SPropertyOperations.getString(cGroup, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")), "counts"));
          }
        });
      }
    });
  }
  private final Map<String, SourceNodesQuery> snsqMethods = new HashMap<String, SourceNodesQuery>();
  {
    int i = 0;
    snsqMethods.put("8544263073411795770", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("8544263073412629253", new QueriesGenerated.SNsQ(i++));
  }
  @NotNull
  @Override
  public SourceNodesQuery getSourceNodesQuery(@NotNull QueryKey identity) {
    final String id = ((QueryKeyImpl) identity).getQueryNodeId().toString();
    if (!(snsqMethods.containsKey(id))) {
      return super.getSourceNodesQuery(identity);
    }
    return snsqMethods.get(id);
  }
  private static class SNsQ implements SourceNodesQuery {
    private final int methodKey;
    public SNsQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @NotNull
    public Collection<SNode> evaluate(@NotNull SourceSubstituteMacroNodesContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_8544263073411795770(ctx));
        case 1:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_8544263073412629253(ctx));
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, PropertyValueQuery> pvqMethods = new HashMap<String, PropertyValueQuery>();
  {
    int i = 0;
    pvqMethods.put("480556465136580367", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "input"));
    pvqMethods.put("480556465136580383", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "gene"));
    pvqMethods.put("480556465136580421", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "gene"));
    pvqMethods.put("8544263073411224538", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "a"));
    pvqMethods.put("480556465136588095", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b8L, 0x11106e60089e754eL, "value"), "/Users/fac2003/R_RESULTS/tsne/prefix"));
    pvqMethods.put("480556465136821725", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52bbL, 0x11106e60089e7685L, "value"), "0.1"));
    pvqMethods.put("6865003381553004104", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52baL, 0x11106e60089e7566L, "value"), "1"));
    pvqMethods.put("480556465136761023", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "normalized"));
    pvqMethods.put("49418204378381486", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "Normalized"));
    pvqMethods.put("49418204378384447", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "elementid"));
    pvqMethods.put("49418204378647514", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "BUTSJDD_BCELLCountsTable.tsv"));
    pvqMethods.put("49418204378641615", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "elementid"));
    pvqMethods.put("480556465136580474", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x544eb3a5f68f41edL, 0x98e0db6291e897fbL, 0x39af1051e1175767L, 0x39af1051e1175768L, "id"), "id"));
    pvqMethods.put("480556465136580481", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x544eb3a5f68f41edL, 0x98e0db6291e897fbL, 0x13016f4f448adddbL, 0x7c7b9355b28afec0L, "nodeId"), "nodeId"));
    pvqMethods.put("480556465135944283", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "input"));
    pvqMethods.put("8544263073412629226", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "gene"));
    pvqMethods.put("480556465135997728", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "gene"));
    pvqMethods.put("26829229960117244", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b8L, 0x11106e60089e754eL, "value"), "folder"));
    pvqMethods.put("480556465136151481", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52bbL, 0x11106e60089e7685L, "value"), "0.1"));
    pvqMethods.put("1369498147940466310", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x544eb3a5f68f41edL, 0x98e0db6291e897fbL, 0x39af1051e1175767L, 0x39af1051e1175768L, "id"), "id"));
    pvqMethods.put("480556465136101174", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x544eb3a5f68f41edL, 0x98e0db6291e897fbL, 0x13016f4f448adddbL, 0x7c7b9355b28afec0L, "nodeId"), "nodeId"));
  }
  @NotNull
  @Override
  public PropertyValueQuery getPropertyValueQuery(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(pvqMethods.containsKey(id))) {
      return super.getPropertyValueQuery(identity);
    }
    return pvqMethods.get(id);
  }
  private static class PVQ extends PropertyValueQuery.Base {
    private final int methodKey;
    /*package*/ PVQ(int methodKey, SProperty property, String templateValue) {
      super(property, templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull PropertyMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.propertyMacro_GetPropertyValue_480556465136580368(ctx);
        case 1:
          return QueriesGenerated.propertyMacro_GetPropertyValue_480556465136580384(ctx);
        case 2:
          return QueriesGenerated.propertyMacro_GetPropertyValue_480556465136580422(ctx);
        case 3:
          return QueriesGenerated.propertyMacro_GetPropertyValue_8544263073411224539(ctx);
        case 4:
          return QueriesGenerated.propertyMacro_GetPropertyValue_480556465136588096(ctx);
        case 5:
          return QueriesGenerated.propertyMacro_GetPropertyValue_480556465136821726(ctx);
        case 6:
          return QueriesGenerated.propertyMacro_GetPropertyValue_6865003381553004105(ctx);
        case 7:
          return QueriesGenerated.propertyMacro_GetPropertyValue_480556465136761024(ctx);
        case 8:
          return QueriesGenerated.propertyMacro_GetPropertyValue_49418204378381487(ctx);
        case 9:
          return QueriesGenerated.propertyMacro_GetPropertyValue_49418204378384448(ctx);
        case 10:
          return QueriesGenerated.propertyMacro_GetPropertyValue_49418204378647515(ctx);
        case 11:
          return QueriesGenerated.propertyMacro_GetPropertyValue_49418204378641616(ctx);
        case 12:
          return QueriesGenerated.propertyMacro_GetPropertyValue_480556465136580475(ctx);
        case 13:
          return QueriesGenerated.propertyMacro_GetPropertyValue_480556465136580482(ctx);
        case 14:
          return QueriesGenerated.propertyMacro_GetPropertyValue_480556465135944284(ctx);
        case 15:
          return QueriesGenerated.propertyMacro_GetPropertyValue_8544263073412629227(ctx);
        case 16:
          return QueriesGenerated.propertyMacro_GetPropertyValue_480556465135997729(ctx);
        case 17:
          return QueriesGenerated.propertyMacro_GetPropertyValue_26829229960117245(ctx);
        case 18:
          return QueriesGenerated.propertyMacro_GetPropertyValue_480556465136151482(ctx);
        case 19:
          return QueriesGenerated.propertyMacro_GetPropertyValue_1369498147940466311(ctx);
        case 20:
          return QueriesGenerated.propertyMacro_GetPropertyValue_480556465136101175(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, IfMacroCondition> imcMethods = new HashMap<String, IfMacroCondition>();
  {
    int i = 0;
    imcMethods.put("6865003381553089601", new QueriesGenerated.IfMC(i++));
  }
  @NotNull
  @Override
  public IfMacroCondition getIfMacroCondition(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(imcMethods.containsKey(id))) {
      return super.getIfMacroCondition(identity);
    }
    return imcMethods.get(id);
  }
  private static class IfMC implements IfMacroCondition {
    private final int methodKey;
    public IfMC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(@NotNull IfMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.ifMacro_Condition_6865003381553089603(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for if macro %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
}
